{"version":3,"sources":["shared/card.js","screens/home.js","shared/header.js","routes/homeStack.js","styles/global.js","screens/log.js","screens/logDetails.js","routes/logStack.js","screens/settings.js","routes/settingsStack.js","routes/drawer.js","App.js","web-build/register-service-worker.js"],"names":["Card","props","View","style","styles","card","backgroundColor","color","cardContent","children","currentHour","currentTimestamp","StyleSheet","create","borderRadius","elevation","shadowOffset","width","height","shadowColor","shadowOpacity","shadowRadius","marginHorizontal","marginVertical","flexDirection","justifyContent","hr","min","sec","interval","numClicked","allTimes","q","container","flex","alignItems","time","fontSize","textAlign","margin","saveButton","marginTop","Header","navigation","title","header","MaterialIcons","name","size","onPress","openDrawer","icon","Text","headerText","Dimensions","get","fontWeight","position","left","screens","Home","screen","useState","hours","minutes","seconds","setTime","showSave","setShowSave","text","button","setButton","pad","n","substr","update","addListener","a","async","console","AsyncStorage","getItem","log","JSON","parse","Button","setInterval","clearInterval","Date","getHours","month","getMonth","year","getFullYear","day","getDate","dayTime","key","push","setItem","stringify","navigationOptions","headerTitle","headerStyle","headerTintColor","headerTitleAlign","HomeStack","createStackNavigator","globalStyles","padding","titleText","paragraph","lineHeight","textStyle","timeDay","timeNight","totalTime","marginLeft","marginRight","times","exportTime","Log","loadedData","setloadedData","studentEmail","parentEmail","email","setEmail","setSent","sent","checkDay","date","getDay","sendEmail","sendReport","setLogs","getData","logs","hrsDay","hrsNight","convertTable","obj","table","i","length","recipient","input","r","hd","hn","fetch","method","headers","body","then","response","json","forEach","Math","trunc","TouchableOpacity","FlatList","data","reverse","renderItem","item","navigate","Details","dLogs","setDLogs","currentTimestamps","getParam","splice","headerTitleStyle","LogStack","borderWidth","borderColor","Settings","enableReinitialize","initialValues","onSubmit","values","actions","resetForm","TextInput","placeholder","onChangeText","handleChange","value","handleSubmit","SettingsStack","RootDrawerNavigator","createDrawerNavigator","createAppContainer","App","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error"],"mappings":"sOAIe,SAASA,EAAKC,GAE3B,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAACC,EAAOC,KAAM,CAACC,gBAAiBL,EAAMM,SACjD,kBAACL,EAAA,EAAD,CAAMC,MAAOC,EAAOI,aAAcP,EAAMQ,WAK9C,ICGIC,EAEAC,EDLEP,EAASQ,IAAWC,OAAO,CAC/BR,KAAM,CACJS,aAAc,EACdC,UAAW,EACXC,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,YAAa,OACbC,cAAe,GACfC,aAAc,EACdC,iBAAkB,EAClBC,eAAgB,GAElBf,YAAa,CACXc,iBAAkB,GAClBC,eAAgB,GAChBC,cAAe,MACfC,eAAgB,mB,0BCnBhBC,EAAK,EACLC,EAAM,EACNC,EAAM,EACNC,EAAW,EACXC,EAAa,EAMbC,EAAW,GACXC,GAAK,EA2JT,IAAM5B,EAASQ,IAAWC,OAAO,CAC/BoB,UAAW,CACTC,KAAM,EACNT,eAAgB,SAChBU,WAAY,SACZ7B,gBAAiB,WAEnB8B,KAAM,CACJC,SAAU,GACVC,UAAW,SACXC,OAAQ,IAEVC,WAAY,CACVC,UAAW,M,iBCvLA,SAASC,EAAT,GAAwC,IAArBC,EAAoB,EAApBA,WAAYC,EAAQ,EAARA,MAM5C,OACE,kBAAC1C,EAAA,EAAD,CAAMC,MAAOC,EAAOyC,QAClB,kBAACC,EAAA,EAAD,CAAeC,KAAK,OAAOC,KAAM,GAAIC,QANxB,WACfN,EAAWO,cAK+C/C,MAAOC,EAAO+C,OACtE,kBAACjD,EAAA,EAAD,KACE,kBAACkD,EAAA,EAAD,CAAMjD,MAAOC,EAAOiD,YAAcT,KAM1C,IAAMxC,EAASQ,IAAWC,OAAO,CAC/BgC,OAAQ,CACN5B,MAAOqC,IAAWC,IAAI,UAAUtC,MAChCC,OAAQ,OACRM,cAAe,MACfW,WAAY,SACZV,eAAgB,UAElB4B,WAAY,CACVG,WAAY,OACZnB,SAAU,GACV9B,MAAO,WAET4C,KAAM,CACJM,SAAU,WACVC,KAAM,GACNnD,MAAO,WChCLoD,EAAU,CACdC,KAAM,CACJC,OFeW,YAA+B,IAAflB,EAAc,EAAdA,WAAc,EAGnBmB,mBAAS,CAAEC,MAAO,EAAGC,QAAS,EAAGC,QAAS,IAHvB,WAGpC7B,EAHoC,KAG9B8B,EAH8B,OAKXJ,oBAAS,GALE,WAKpCK,EALoC,KAK1BC,EAL0B,OA0DfN,mBAAS,CAAEvD,MAAO,QAAS8D,KAAM,UA1DlB,WA0DpCC,EA1DoC,KA0D5BC,EA1D4B,KAwE3C,SAASC,EAAIC,GACX,OAAQ,KAAOA,GAAGC,QAAQ,GAG5B,SAASC,MACP/C,GACW,KACTD,GAAOC,EAAM,GACbA,GAAY,IAGVD,GAAO,KACTD,GAAMC,EAAM,GACZA,GAAY,IAEduC,EAAQ,CAAEH,MAAOrC,EAAIsC,QAASrC,EAAKsC,QAASrC,IAuC9C,OA3Bae,EAAWiC,YAAY,YAAY,WAC1C5C,GAAK,GAXM,EAAA6C,EAAAC,OAAA,qEAEbC,QAFa,WAAAF,EAAA,MAEKG,IAAaC,QAAQ,kBAF1B,+BAELC,IAFK,qBAGFC,KAHE,WAAAN,EAAA,MAGeG,IAAaC,QAAQ,kBAHpC,mBAGblD,EAHa,KAGGqD,MAHH,kEAKbL,QAAQG,IAAI,gBALC,oEAsCf,kBAAChF,EAAA,EAAD,CAAMC,MAAOC,EAAO6B,WAClB,kBAACmB,EAAA,EAAD,CAAMjD,MAAOC,EAAOgC,MACjBoC,EAAIpC,EAAK2B,OADZ,IACqBS,EAAIpC,EAAK4B,SAD9B,IACyCQ,EAAIpC,EAAK6B,UAElD,kBAAC/D,EAAA,EAAD,KACE,kBAACmF,EAAA,EAAD,CACEzC,MAAO0B,EAAOD,KACd9D,MAAO+D,EAAO/D,MACd0C,QA3Ea,WACfnB,EAAa,IAAM,GACrBD,EAAWyD,YAAYX,EAAQ,KAC/BJ,EAAU,CAAEhE,MAAO,MAAO8D,KAAM,YAEhCkB,cAAc1D,GACd0C,EAAU,CAAEhE,MAAO,QAAS8D,KAAM,WAEpCD,GAAY,GACZtC,QAqEE,kBAAC5B,EAAA,EAAD,CAAMC,MAAOC,EAAOoC,YACjB2B,GACC,kBAACkB,EAAA,EAAD,CACEzC,MAAM,SACNK,QAAS,WAvIbnB,EAAa,IAAM,EACrBA,KAEAyD,cAAc1D,GACd0C,EAAU,CAAEhE,MAAO,QAAS8D,KAAM,WAEpCD,GAAY,GACZ1D,GAAc,IAAI8E,MAAOC,YACR,IAAbtB,GACFrC,IAGFE,IAUErB,EATED,GAAe,GASE,CACjBgF,OAAO,IAAIF,MAAOG,WAAa,EAC/BC,MAAM,IAAIJ,MAAOK,cACjBC,KAAK,IAAIN,MAAOO,UAChBhC,MAAOrC,EACPsC,QAASrC,EACTqE,SAAS,EACTC,IAAKjE,GAGY,CACjB0D,OAAO,IAAIF,MAAOG,WAAa,EAC/BC,MAAM,IAAIJ,MAAOK,cACjBC,KAAK,IAAIN,MAAOO,UAChBhC,MAAOrC,EACPsC,QAASrC,EACTqE,SAAS,EACTC,IAAKjE,GAGTkC,EAAQ,CAAEH,MAAO,EAAGC,QAAS,EAAGC,QAAS,IACzCvC,EAAK,EACLC,EAAM,EACNC,EAAM,EAENG,EAASmE,KAAKvF,GACdqE,IAAamB,QAAQ,gBAAiBhB,KAAKiB,UAAUrE,UErErDsE,kBAAmB,YAAqB,IAAlB1D,EAAiB,EAAjBA,WACpB,MAAO,CACL2D,YAAa,kBAAM,kBAAC5D,EAAD,CAAQC,WAAYA,EAAYC,MAAM,aACzD2D,YAAa,CAACjG,gBAAiB,WAC/BkG,gBAAiB,UACjBC,iBAAkB,aAQXC,EAFGC,YAAqBhD,G,gBCjB1BiD,EAAehG,IAAWC,OAAO,CAC5CoB,UAAW,CACTC,KAAM,EACN2E,QAAS,IAKXC,UAAW,CACTzE,SAAU,IAEZ0E,UAAW,CACTxF,eAAgB,EAChByF,WAAY,MCkMhB,IAAM5G,EAASQ,IAAWC,OAAO,CAC/BoG,UAAW,CACT5E,SAAU,GACV9B,MAAO,SAET2G,QAAS,CACP7E,SAAU,GACV9B,MAAO,WAET4G,UAAW,CACT9E,SAAU,GACV9B,MAAO,WAET6G,UAAW,CACT5F,cAAe,MACfC,eAAgB,gBAChB4F,WAAY,GACZC,YAAa,IAEfC,MAAO,CACLpF,WAAY,UAEdqF,WAAY,CACVnF,SAAU,GACVC,UAAW,QACXkB,WAAY,UCzLhB,IAAMpD,EAASQ,IAAWC,OAAO,CAC/BoB,UAAW,CACTC,KAAM,EACNT,eAAgB,SAChBnB,gBAAiB,UACjB6B,WAAY,UAEdkC,KAAM,CACJhC,SAAU,MClDRsB,EAAU,CACd8D,IAAK,CACH5D,OFOW,YAA8B,IAAflB,EAAc,EAAdA,WAAc,EACNmB,oBAAS,GADH,WACnC4D,EADmC,KACvBC,EADuB,OAGhB7D,mBAAS,CAAE8D,aAAc,GAAIC,YAAa,KAH1B,WAGnCC,EAHmC,KAG5BC,EAH4B,KA6BpCC,EAAU,SAAOC,GAAP,SAAApD,EAAAC,OAAA,2EAAAD,EAAA,MAENG,IAAamB,QAAQ,OAAQ8B,IAFvB,sDAIZlD,QAAQG,IAAR,MAJY,gEAQhB,SAASgD,EAASN,EAAcC,EAAaI,GAC3C,IAAIE,EAAO,IAAI3C,KACM,GAAjB2C,EAAKC,UAAyB,QAARH,IAgH5B,SAAoBL,EAAcC,GAChCQ,EAAUT,GACVS,EAAUR,GAjHRS,CAAWV,EAAcC,GACzBG,EAAQ,SACkB,GAAjBG,EAAKC,UAAyB,QAARH,GAC/BD,EAAQ,SAICrF,EAAWiC,YAAY,YAAY,YA1ChC,yBAAAC,EAAAC,OAAA,gEAEZC,QAAQG,IAAI,gBAFA,WAAAL,EAAA,MAGaG,IAAaC,QAAQ,iBAHlC,cAGR2C,EAHQ,kBAAA/C,EAAA,MAIYG,IAAaC,QAAQ,gBAJjC,cAIR4C,EAJQ,mBAAAhD,EAAA,MAKiBG,IAAaC,QAAQ,kBALtC,eAKRtE,EALQ,mBAAAkE,EAAA,MASKG,IAAaC,QAAQ,SAT1B,QASRgD,EATQ,OAUZC,EAASN,EAAcC,EAAaI,GAGpCM,EAAQpD,KAAKC,MAAMzE,IAEd+G,IACHK,EAAS,CAAEH,aAAcA,EAAcC,YAAaA,IACpDF,GAAc,IAjBJ,kDAoBZ5C,QAAQG,IAAR,MApBY,iEA2CdsD,MADF,IA/C0C,EA8DlB1E,mBAAS,IA9DS,WA8DnC2E,EA9DmC,KA8D7BF,EA9D6B,KAiEtCG,EAAS,EACTC,EAAW,EA2Cf,SAASC,EAAaC,GACpB,IAAIC,EAAQ,8BACZA,GAAS,0DACT,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC9BD,GAAS,OACTA,GAAK,OAAWD,EAAIE,GAAJ,MAAX,IAA8BF,EAAIE,GAAJ,IAA9B,IAA+CF,EAAIE,GAAJ,KAA/C,QACLD,GAAK,OAAWD,EAAIE,GAAJ,MAAX,KAA+BF,EAAIE,GAAJ,QAA/B,SACDF,EAAIE,GAAJ,QACFD,GAAS,mBAETA,GAAS,qBAEXA,GAAS,QAIX,OADAA,GAAS,WAIX,SAAST,EAAUY,GACjBlE,QAAQG,IAAI+D,GACZ,IAAIC,EAAQ,CACVC,EAAGF,EACHG,GAAIV,EACJW,GAAIV,EACJG,MAAOF,EAAaH,IAGtBa,MAAM,6CAA8C,CAClDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMtE,KAAKiB,UAAU8C,KACpBQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAajC,OAxFmB,GAAfnB,EAAKO,QACPP,EAAKoB,SAAQ,SAAUhB,GACjBA,EAAI7C,SACN0C,GAAUG,EAAI7E,QAAU,GACxB0E,GAAUG,EAAI9E,QAEd4E,GAAYE,EAAI7E,QAAU,GAC1B2E,GAAYE,EAAI9E,UA+BtB2E,EAASoB,KAAKC,MAAMrB,GACpBC,EAAWmB,KAAKC,MAAMpB,GAkDpB,kBAACzI,EAAA,EAAD,CAAMC,MAAOyG,EAAa3E,WACxB,kBAAC+H,EAAA,EAAD,CAAkB/G,QAZtB,WACEoF,EAAUP,EAAMF,cAChBS,EAAUP,EAAMD,eAWZ,kBAACzE,EAAA,EAAD,CAAMjD,MAAOC,EAAOoH,YAApB,WAGF,kBAACtH,EAAA,EAAD,CAAMC,MAAOC,EAAOgH,WAClB,kBAAClH,EAAA,EAAD,CAAMC,MAAOC,EAAOmH,OAClB,kBAACnE,EAAA,EAAD,CAAMjD,MAAOC,EAAO8G,SAAUwB,GAC9B,kBAACtF,EAAA,EAAD,aAEF,kBAAClD,EAAA,EAAD,CAAMC,MAAOC,EAAOmH,OAClB,kBAACnE,EAAA,EAAD,CAAMjD,MAAOC,EAAO+G,WAAYwB,GAChC,kBAACvF,EAAA,EAAD,gBAIJ,kBAAC6G,EAAA,EAAD,CACEC,KAAMzB,EAAK0B,UACXC,WAAY,gBAxHGpE,EAwHAqE,EAAH,EAAGA,KAAH,OACV,kBAACL,EAAA,EAAD,CACE/G,QAAS,kBAAMN,EAAW2H,SAAS,UAAWD,KAC9C,kBAACrK,EAAD,CAAMO,OA3HKyF,EA2HcqE,EAAKrE,QA1HlCA,EACK,UAEF,YAwHG,kBAAC5C,EAAA,EAAD,CAAMjD,MAAOC,EAAO6G,WACjBoD,EAAK3E,MADR,IACgB2E,EAAKvE,IADrB,IAC2BuE,EAAKzE,MAEhC,kBAACxC,EAAA,EAAD,CAAMjD,MAAOC,EAAO6G,WACjBoD,EAAKtG,MADR,KACiBsG,EAAKrG,QADtB,YE5LVqC,kBAAmB,YAAqB,IAAlB1D,EAAiB,EAAjBA,WACpB,MAAO,CACL2D,YAAa,kBAAM,kBAAC5D,EAAD,CAAQC,WAAYA,EAAYC,MAAM,SACzD2D,YAAa,CAAEjG,gBAAiB,WAChCkG,gBAAiB,UACjBC,iBAAkB,YAIxB8D,QAAS,CACP1G,ODfW,YAAqC,IAAflB,EAAc,EAAdA,WAAc,EACvBmB,qBADuB,WAC1C0G,EAD0C,KACnCC,EADmC,KAiBjD,OAJa9H,EAAWiC,YAAY,YAAY,YAXhC,mBAAAC,EAAAC,OAAA,gEAEZC,QAAQG,IAAI,+BAFA,WAAAL,EAAA,MAGkBG,IAAaC,QAAQ,kBAHvC,OAGRyF,EAHQ,OAKZD,EAAStF,KAAKC,MAAMsF,IALR,gDAOZ3F,QAAQG,IAAR,MAPY,gEAYdsD,MAIA,kBAACtI,EAAA,EAAD,CAAMC,MAAOC,EAAO6B,WAClB,kBAACmB,EAAA,EAAD,CAAMjD,MAAOC,EAAOiE,MACjB1B,EAAWgI,SAAS,SADvB,IACkChI,EAAWgI,SAAS,OADtD,IAEGhI,EAAWgI,SAAS,SAEvB,kBAACvH,EAAA,EAAD,CAAMjD,MAAOC,EAAOiE,MAApB,gBACgB1B,EAAWgI,SAAS,SADpC,IAC+C,IAC5ChI,EAAWgI,SAAS,WAFvB,KAIA,kBAACX,EAAA,EAAD,KACE,kBAAClH,EAAA,EAAD,CACEC,KAAK,SACLC,KAAM,GACN7C,MAAOC,EAAO+C,KACdF,QAAS,WACPuH,EAAMI,OAAOjI,EAAWgI,SAAS,OAAQ,GACzC3F,IAAamB,QAAQ,gBAAiBhB,KAAKiB,UAAUoE,IACrDxF,IAAamB,QAAQ,aAAchB,KAAKiB,UAAUoE,UCnB1DnE,kBAAmB,CACjBE,YAAa,CAAEjG,gBAAiB,WAChCkG,gBAAiB,UACjBC,iBAAkB,SAClBoE,iBAAkB,CAAErH,WAAY,OAAQnB,SAAU,OAOzCyI,EAFEnE,YAAqBhD,G,QCgDtC,IAAMvD,EAASQ,IAAWC,OAAO,CAC/BoB,UAAW,CACTQ,UAAW,IAEbyG,MAAO,CACL6B,YAAa,EACbC,YAAa,OACbnE,QAAS,GACTxE,SAAU,GACVvB,aAAc,EACdyB,OAAQ,IAEV+B,OAAQ,CACN7B,UAAW,GACXN,WAAY,UAEdkC,KAAM,CACJgD,WAAY,MC1FV1D,EAAU,CACdsH,SAAU,CACRpH,ODDW,YAAuC,IAAflB,EAAc,EAAdA,WAAc,EACzBmB,mBAAS,CAAE8D,aAAc,GAAIC,YAAa,KADjB,WAC5CC,EAD4C,KACrCC,EADqC,KAoBnD,OAJapF,EAAWiC,YAAY,YAAY,YAbhC,qBAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEaG,IAAaC,QAAQ,iBAFlC,cAER2C,EAFQ,kBAAA/C,EAAA,MAGYG,IAAaC,QAAQ,gBAHjC,OAGR4C,EAHQ,OAIQ,MAAhBD,GAAuC,MAAfC,IAC1BE,EAAS,CAAEH,aAAcA,EAAcC,YAAaA,IACpD9C,QAAQG,IAAI4C,IANF,kDASZ/C,QAAQG,IAAR,MATY,iEAcdsD,MAIA,kBAACtI,EAAA,EAAD,CAAMC,MAAOC,EAAO6B,WAClB,kBAAC,IAAD,CACEiJ,oBAAkB,EAClBC,cAAe,CACbvD,aAAcE,EAAMF,aACpBC,YAAaC,EAAMD,aAErBuD,SAAU,SAAOC,EAAQC,GAAf,SAAAzG,EAAAC,OAAA,2EAAAD,EAAA,MAEAG,IAAamB,QAAQ,eAAgBkF,EAAOzD,eAF5C,yBAAA/C,EAAA,MAGAG,IAAamB,QAAQ,cAAekF,EAAOxD,cAH3C,OAINyD,EAAQC,YAJF,gDAMNxG,QAAQG,IAAR,MANM,mEAST,SAACjF,GAAD,OACC,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CAAMC,MAAOC,EAAOiE,MAClB,kBAACjB,EAAA,EAAD,uBAEF,kBAACoI,EAAA,EAAD,CACErL,MAAOC,EAAO8I,MACduC,YAAY,gBACZC,aAAczL,EAAM0L,aAAa,gBACjCC,MAAO3L,EAAMoL,OAAOzD,eAEtB,kBAAC1H,EAAA,EAAD,CAAMC,MAAOC,EAAOiE,MAClB,kBAACjB,EAAA,EAAD,sBAEF,kBAACoI,EAAA,EAAD,CACErL,MAAOC,EAAO8I,MACduC,YAAY,eACZC,aAAczL,EAAM0L,aAAa,eACjCC,MAAO3L,EAAMoL,OAAOxD,cAGtB,kBAAC3H,EAAA,EAAD,CAAMC,MAAOC,EAAOkE,QAClB,kBAACe,EAAA,EAAD,CACEzC,MAAM,SACNrC,MAAM,QACN0C,QAAShD,EAAM4L,sBC5D3BxF,kBAAmB,YAAqB,IAAlB1D,EAAiB,EAAjBA,WACpB,MAAO,CACL2D,YAAa,kBAAM,kBAAC5D,EAAD,CAAQC,WAAYA,EAAYC,MAAM,cACzD2D,YAAa,CAACjG,gBAAiB,WAC/BkG,gBAAiB,UACjBC,iBAAkB,aAQXqF,EAFOnF,YAAqBhD,GCZrCoI,EAAsBC,YAAsB,CAChDpI,KAAM,CACJC,OAAQ6C,GAEVe,IAAK,CACH5D,OAAQiH,GAEVG,SAAU,CACRpH,OAAQiI,KAIGG,+BAAmBF,G,cCRnB,SAASG,IACtB,OACE,gBAAC,EAAD,Q,+DCXA,kBAAmBC,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7C9C,MAAK,SAAU+C,OAGfC,OAAM,SAAUC,GACf5H,QAAQ0H,KAAK,oCAAqCE,W","file":"static/js/app.ed021f5e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\n\r\n\r\nexport default function Card(props) {\r\n  \r\n  return (\r\n    <View style={[styles.card, {backgroundColor: props.color}]}>\r\n      <View style={styles.cardContent}>{props.children}</View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    borderRadius: 6,\r\n    elevation: 3,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: '#333',\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n    marginHorizontal: 4,\r\n    marginVertical: 6,\r\n  },\r\n  cardContent: {\r\n    marginHorizontal: 18,\r\n    marginVertical: 10,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n});\r\n","import React, { Component, useState } from 'react';\r\nimport { AppRegistry, StyleSheet, Text, View, Button } from 'react-native';\r\nimport Card from '../shared/card';\r\nimport { SQLite } from 'expo-sqlite';\r\nimport Constants from 'expo-constants';\r\nimport { Formik } from 'formik';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport { createStackNavigator, createAppContainer } from 'react-navigation';\r\n\r\nvar hr = 0;\r\nvar min = 0;\r\nvar sec = 0;\r\nvar interval = 0;\r\nvar numClicked = 0;\r\nvar timeStampArr = { tsHours: '', tsMinutes: '', tsSeconds: '' };\r\nvar totalTime;\r\nvar currentHour;\r\nvar storeData;\r\nvar currentTimestamp;\r\nvar allTimes = [];\r\nvar q = -1;\r\nvar t = -1;\r\nexport default function Home({ navigation }) {\r\n  // create a path you want to write to\r\n\r\n  const [time, setTime] = useState({ hours: 0, minutes: 0, seconds: 0 });\r\n\r\n  const [showSave, setShowSave] = useState(false);\r\n  const clickHandlerSave = () => {\r\n    if (numClicked % 2 === 0) {\r\n      numClicked++;\r\n    } else {\r\n      clearInterval(interval);\r\n      setButton({ color: 'green', text: 'Start' });\r\n    }\r\n    setShowSave(true);\r\n    currentHour = new Date().getHours();\r\n    if (showSave === true) {\r\n      numClicked++;\r\n    }\r\n\r\n    q++;\r\n    if (currentHour >= 17) {\r\n      /*\r\n      month: 6,\r\n      day: 25,\r\n      year: 2020,\r\n      hours: 4,\r\n      minutes: 45,\r\n      dayTime: true,\r\n      */\r\n      currentTimestamp = {\r\n        month: new Date().getMonth() + 1,\r\n        year: new Date().getFullYear(),\r\n        day: new Date().getDate(),\r\n        hours: hr,\r\n        minutes: min,\r\n        dayTime: false,\r\n        key: q,\r\n      };\r\n    } else {\r\n      currentTimestamp = {\r\n        month: new Date().getMonth() + 1,\r\n        year: new Date().getFullYear(),\r\n        day: new Date().getDate(),\r\n        hours: hr,\r\n        minutes: min,\r\n        dayTime: true,\r\n        key: q,\r\n      };\r\n    }\r\n    setTime({ hours: 0, minutes: 0, seconds: 0 });\r\n    hr = 0;\r\n    min = 0;\r\n    sec = 0;\r\n    //alert(JSON.stringify(currentTimestamp));\r\n    allTimes.push(currentTimestamp);\r\n    AsyncStorage.setItem('totalTimesArr', JSON.stringify(allTimes));\r\n    //alert(JSON.stringify(allTimes));\r\n  };\r\n  const [button, setButton] = useState({ color: 'green', text: 'Start' });\r\n\r\n  const clickHandler = () => {\r\n    if (numClicked % 2 === 0) {\r\n      interval = setInterval(update, 1000);\r\n      setButton({ color: 'red', text: 'Pause' });\r\n    } else {\r\n      clearInterval(interval);\r\n      setButton({ color: 'green', text: 'Start' });\r\n    }\r\n    setShowSave(true);\r\n    numClicked++;\r\n  };\r\n\r\n  function pad(n) {\r\n    return ('00' + n).substr(-2);\r\n  }\r\n\r\n  function update() {\r\n    sec++;\r\n    if (sec >= 60) {\r\n      min += sec / 60;\r\n      sec = sec % 60;\r\n    }\r\n\r\n    if (min >= 60) {\r\n      hr += min / 60;\r\n      min = min % 60;\r\n    }\r\n    setTime({ hours: hr, minutes: min, seconds: sec });\r\n  }\r\n  const makeWork = async () => {\r\n    try {\r\n      console.log(await AsyncStorage.getItem('totalTimesArr'));\r\n      allTimes = JSON.parse(await AsyncStorage.getItem('totalTimesArr'));\r\n    } catch {\r\n      console.log('async caught');\r\n    }\r\n  };\r\n\r\n  //Credit: John C. Bullard ~Debugger\r\n  const load = navigation.addListener('didFocus', () => {\r\n    if (q >= 0) {\r\n      makeWork();\r\n    }\r\n  });\r\n\r\n  /*\r\n  const getData = async () => {\r\n    try {\r\n      console.log(\"Getting data\")\r\n      allTimes = [JSON.parse(await AsyncStorage.getItem('totalTimesArr'))];\r\n      //alert(taco);\r\n    } catch (error) {\r\n      allTimes = []\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      console.log('Getting data');\r\n      var taco = await AsyncStorage.getItem('currentTimeStamp');\r\n      console.log(taco);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  */\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.time}>\r\n        {pad(time.hours)}:{pad(time.minutes)}:{pad(time.seconds)}\r\n      </Text>\r\n      <View>\r\n        <Button\r\n          title={button.text}\r\n          color={button.color}\r\n          onPress={clickHandler}\r\n        />\r\n      </View>\r\n      <View style={styles.saveButton}>\r\n        {showSave && (\r\n          <Button\r\n            title=\" Save \"\r\n            onPress={() => {\r\n              //getData();\r\n              clickHandlerSave();\r\n            }}\r\n          />\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#F5FCFF',\r\n  },\r\n  time: {\r\n    fontSize: 50,\r\n    textAlign: 'center',\r\n    margin: 10,\r\n  },\r\n  saveButton: {\r\n    marginTop: 10,\r\n  },\r\n});\r\n","import React, { Component, useState } from 'react';\r\nimport { AppRegistry, StyleSheet, Text, View, Button } from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { Dimensions } from 'react-native'\r\n\r\nexport default function Header( { navigation, title }){\r\n\r\n  const openMenu = () => {\r\n    navigation.openDrawer()\r\n  }\r\n\r\n  return (\r\n    <View style={styles.header}>\r\n      <MaterialIcons name='menu' size={28} onPress={openMenu} style={styles.icon} />\r\n      <View>\r\n        <Text style={styles.headerText}>{ title }</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    width: Dimensions.get('screen').width,\r\n    height: '100%',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  headerText: {\r\n    fontWeight: 'bold',\r\n    fontSize: 20,\r\n    color: '#ffffff',\r\n  },\r\n  icon: {\r\n    position: 'absolute',\r\n    left: 16,\r\n    color: 'white',\r\n  }\r\n});\r\n","import { createStackNavigator } from 'react-navigation-stack';\r\nimport Home from '../screens/home';\r\nimport Header from '../shared/header';\r\nimport React from 'react';\r\n\r\nconst screens = {\r\n  Home: {\r\n    screen: Home,\r\n    navigationOptions: ({ navigation }) => {\r\n      return {\r\n        headerTitle: () => <Header navigation={navigation} title='Drive45' />,\r\n        headerStyle: {backgroundColor: '#2c3df5'},\r\n        headerTintColor: '#ffffff',\r\n        headerTitleAlign: 'center',\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst HomeStack = createStackNavigator(screens)\r\n\r\nexport default HomeStack;","import { StyleSheet } from 'react-native';\r\n\r\nexport const globalStyles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    //justifyContent: 'center',\r\n    //alignItems: 'center',\r\n    //backgroundColor: '#F5FCFF',\r\n  },\r\n  titleText: {\r\n    fontSize: 18,\r\n  },\r\n  paragraph: {\r\n    marginVertical: 8,\r\n    lineHeight: 20,\r\n  }\r\n});","import React, { Component, useState } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  Modal,\r\n  State,\r\n  RCTAnimation,\r\n} from 'react-native';\r\nimport { globalStyles } from '../styles/global';\r\nimport Card from '../shared/card';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n\r\nexport default function Log({ navigation }) {\r\n  const [loadedData, setloadedData] = useState(false);\r\n\r\n  const [email, setEmail] = useState({ studentEmail: '', parentEmail: '' });\r\n\r\n  const getData = async () => {\r\n    try {\r\n      console.log('Getting data');\r\n      var studentEmail = await AsyncStorage.getItem('studentEmail');\r\n      var parentEmail = await AsyncStorage.getItem('parentEmail');\r\n      var currentTimestamp = await AsyncStorage.getItem('totalTimesArr');\r\n      //alert(currentTimestamp);\r\n      //code begin\r\n\r\n      var sent = await AsyncStorage.getItem('sent');\r\n      checkDay(studentEmail, parentEmail, sent);\r\n\r\n      //code end\r\n      setLogs(JSON.parse(currentTimestamp));\r\n\r\n      if (!loadedData) {\r\n        setEmail({ studentEmail: studentEmail, parentEmail: parentEmail });\r\n        setloadedData(true);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const setSent = async (sent) => {\r\n    try {\r\n      await AsyncStorage.setItem('sent', sent);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  function checkDay(studentEmail, parentEmail, sent) {\r\n    var date = new Date();\r\n    if (date.getDay() == 5 && sent != 'true') {\r\n      sendReport(studentEmail, parentEmail);\r\n      setSent('true');\r\n    } else if (date.getDay() != 5 && sent == 'true') {\r\n      setSent('false');\r\n    }\r\n  }\r\n\r\n  const load = navigation.addListener('didFocus', () => {\r\n    getData();\r\n  });\r\n\r\n  const pressHandler = () => {\r\n    navigation.navigate('Details');\r\n  };\r\n\r\n  const colorPicker = (dayTime) => {\r\n    if (dayTime) {\r\n      return '#14990f';\r\n    }\r\n    return '#1d0178';\r\n  };\r\n\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  //Sums the times during the day and times during the night\r\n  var hrsDay = 0;\r\n  var hrsNight = 0;\r\n\r\n  if (logs.length == 0) {\r\n    logs.forEach(function (obj) {\r\n      if (obj.dayTime) {\r\n        hrsDay += obj.minutes / 60;\r\n        hrsDay += obj.hours;\r\n      } else {\r\n        hrsNight += obj.minutes / 60;\r\n        hrsNight += obj.hours;\r\n      }\r\n    });\r\n  }\r\n\r\n  /*\r\n  var reverse = [];\r\n\r\n  if (logs.length != 0) {\r\n    console.log(`Logs`);\r\n    console.log(Log);\r\n    var j = 0;\r\n    for (var i = logs.length - 1; i <= 0; i++) {\r\n      var entry = {\r\n        month: logs[i].month,\r\n        year: logs[i].year,\r\n        day: logs[i].day,\r\n        hours: logs[i].hours,\r\n        minutes: logs[i].minutes,\r\n        dayTime: logs[i].dayTime,\r\n        key: j,\r\n      };\r\n\r\n      reverse.push(entry);\r\n      j++;\r\n    }\r\n  }\r\n  */\r\n\r\n  //console.log(reverse);\r\n\r\n  hrsDay = Math.trunc(hrsDay);\r\n  hrsNight = Math.trunc(hrsNight);\r\n\r\n  function convertTable(obj) {\r\n    var table = '<table style=\"width: 100%\">';\r\n    table += '<tr><th>Date</th><th>Time</th><th>Time of Day</th></tr>';\r\n    for (var i = 0; i < obj.length; i++) {\r\n      table += '<tr>';\r\n      table += `<td>${obj[i]['month']}/${obj[i]['day']}/${obj[i]['year']}</td>`;\r\n      table += `<td>${obj[i]['hours']}H ${obj[i]['minutes']}M</td>`;\r\n      if (obj[i]['dayTime']) {\r\n        table += '<td>Daytime</td>';\r\n      } else {\r\n        table += '<td>Nighttime</td>';\r\n      }\r\n      table += '</tr>';\r\n    }\r\n\r\n    table += '</table>';\r\n    return table;\r\n  }\r\n\r\n  function sendEmail(recipient) {\r\n    console.log(recipient);\r\n    var input = {\r\n      r: recipient,\r\n      hd: hrsDay,\r\n      hn: hrsNight,\r\n      table: convertTable(logs),\r\n    };\r\n\r\n    fetch(`https://driversed.pythonanywhere.com/api_1`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(input),\r\n    }).then((response) => response.json());\r\n  }\r\n\r\n  function expLogs() {\r\n    sendEmail(email.studentEmail);\r\n    sendEmail(email.parentEmail);\r\n  }\r\n\r\n  function sendReport(studentEmail, parentEmail) {\r\n    sendEmail(studentEmail);\r\n    sendEmail(parentEmail);\r\n  }\r\n\r\n  return (\r\n    <View style={globalStyles.container}>\r\n      <TouchableOpacity onPress={expLogs}>\r\n        <Text style={styles.exportTime}>Export</Text>\r\n      </TouchableOpacity>\r\n\r\n      <View style={styles.totalTime}>\r\n        <View style={styles.times}>\r\n          <Text style={styles.timeDay}>{hrsDay}</Text>\r\n          <Text>DAY</Text>\r\n        </View>\r\n        <View style={styles.times}>\r\n          <Text style={styles.timeNight}>{hrsNight}</Text>\r\n          <Text>NIGHT</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <FlatList\r\n        data={logs.reverse()}\r\n        renderItem={({ item }) => (\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate('Details', item)}>\r\n            <Card color={colorPicker(item.dayTime)}>\r\n              <Text style={styles.textStyle}>\r\n                {item.month}/{item.day}/{item.year}\r\n              </Text>\r\n              <Text style={styles.textStyle}>\r\n                {item.hours}H {item.minutes}M\r\n              </Text>\r\n            </Card>\r\n          </TouchableOpacity>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  textStyle: {\r\n    fontSize: 15,\r\n    color: 'white',\r\n  },\r\n  timeDay: {\r\n    fontSize: 40,\r\n    color: '#14990f',\r\n  },\r\n  timeNight: {\r\n    fontSize: 40,\r\n    color: '#1d0178',\r\n  },\r\n  totalTime: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginLeft: 60,\r\n    marginRight: 60,\r\n  },\r\n  times: {\r\n    alignItems: 'center',\r\n  },\r\n  exportTime: {\r\n    fontSize: 17,\r\n    textAlign: 'right',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","import React, { Component, useState } from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n\r\nexport default function LogDetails({ navigation }) {\r\n  const [dLogs, setDLogs] = useState();\r\n  const getData = async () => {\r\n    try {\r\n      console.log('Getting data in Log Details');\r\n      var currentTimestamps = await AsyncStorage.getItem('totalTimesArr');\r\n      //alert(currentTimestamps);\r\n      setDLogs(JSON.parse(currentTimestamps));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const load = navigation.addListener('didFocus', () => {\r\n    getData();\r\n  });\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.text}>\r\n        {navigation.getParam('month')}/{navigation.getParam('day')}/\r\n        {navigation.getParam('year')}\r\n      </Text>\r\n      <Text style={styles.text}>\r\n        Time Driven: {navigation.getParam('hours')}H{' '}\r\n        {navigation.getParam('minutes')}M\r\n      </Text>\r\n      <TouchableOpacity>\r\n        <MaterialIcons\r\n          name=\"delete\"\r\n          size={28}\r\n          style={styles.icon}\r\n          onPress={() => {\r\n            dLogs.splice(navigation.getParam('key'), 1);\r\n            AsyncStorage.setItem('totalTimesArr', JSON.stringify(dLogs));\r\n            AsyncStorage.setItem('editedData', JSON.stringify(dLogs));\r\n            \r\n          }}\r\n        />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: '#F5FCFF',\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport Log from '../screens/log';\r\nimport LogDetails from '../screens/logDetails';\r\nimport Header from '../shared/header';\r\n\r\nconst screens = {\r\n  Log: {\r\n    screen: Log,\r\n    navigationOptions: ({ navigation }) => {\r\n      return {\r\n        headerTitle: () => <Header navigation={navigation} title=\"Log\" />,\r\n        headerStyle: { backgroundColor: '#2c3df5' },\r\n        headerTintColor: '#ffffff',\r\n        headerTitleAlign: 'center',\r\n      };\r\n    },\r\n  },\r\n  Details: {\r\n    screen: LogDetails,\r\n    navigationOptions: {\r\n      headerStyle: { backgroundColor: '#2c3df5' },\r\n      headerTintColor: '#ffffff',\r\n      headerTitleAlign: 'center',\r\n      headerTitleStyle: { fontWeight: 'bold', fontSize: 20 },\r\n    },\r\n  },\r\n};\r\n\r\nconst LogStack = createStackNavigator(screens);\r\n\r\nexport default LogStack;\r\n\r\n//export default createAppContainer(LogStack);\r\n","import React, { useState, Component } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Button } from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { Formik } from 'formik';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n\r\nexport default function SettingsForm({ navigation }) {\r\n  const [email, setEmail] = useState({ studentEmail: '', parentEmail: '' });\r\n\r\n  const getData = async () => {\r\n    try {\r\n      var studentEmail = await AsyncStorage.getItem('studentEmail');\r\n      var parentEmail = await AsyncStorage.getItem('parentEmail');\r\n      if (studentEmail != null && parentEmail != null) {\r\n        setEmail({ studentEmail: studentEmail, parentEmail: parentEmail });\r\n        console.log(email);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const load = navigation.addListener('didFocus', () => {\r\n    getData()\r\n  })\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={{\r\n          studentEmail: email.studentEmail,\r\n          parentEmail: email.parentEmail,\r\n        }}\r\n        onSubmit={async (values, actions) => {\r\n          try {\r\n            await AsyncStorage.setItem('studentEmail', values.studentEmail);\r\n            await AsyncStorage.setItem('parentEmail', values.parentEmail);\r\n            actions.resetForm()\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }}>\r\n        {(props) => (\r\n          <View>\r\n            <View style={styles.text}>\r\n              <Text>Student Email</Text>\r\n            </View>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Student Email\"\r\n              onChangeText={props.handleChange('studentEmail')}\r\n              value={props.values.studentEmail}\r\n            />\r\n            <View style={styles.text}>\r\n              <Text>Parent Email</Text>\r\n            </View>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Parent Email\"\r\n              onChangeText={props.handleChange('parentEmail')}\r\n              value={props.values.parentEmail}\r\n            />\r\n\r\n            <View style={styles.button}>\r\n              <Button\r\n                title=\"Submit\"\r\n                color=\"green\"\r\n                onPress={props.handleSubmit}\r\n              />\r\n            </View>\r\n          </View>\r\n        )}\r\n      </Formik>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 20,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    padding: 10,\r\n    fontSize: 18,\r\n    borderRadius: 6,\r\n    margin: 10,\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    marginLeft: 10,\r\n  },\r\n});\r\n","import { createStackNavigator } from 'react-navigation-stack';\r\nimport Settings from '../screens/settings';\r\nimport Header from '../shared/header';\r\nimport React from 'react';\r\n\r\nconst screens = {\r\n  Settings: {\r\n    screen: Settings,\r\n    navigationOptions: ({ navigation }) => {\r\n      return {\r\n        headerTitle: () => <Header navigation={navigation} title='Settings' />,\r\n        headerStyle: {backgroundColor: '#2c3df5'},\r\n        headerTintColor: '#ffffff',\r\n        headerTitleAlign: 'center',\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst SettingsStack = createStackNavigator(screens)\r\n\r\nexport default SettingsStack;","import {  createDrawerNavigator } from 'react-navigation-drawer'\r\nimport { createAppContainer } from 'react-navigation';\r\n\r\nimport HomeStack from './homeStack';\r\nimport LogStack from './logStack';\r\nimport SettingsStack from './settingsStack';\r\n\r\nconst RootDrawerNavigator = createDrawerNavigator({\r\n  Home: {\r\n    screen: HomeStack,\r\n  },\r\n  Log: {\r\n    screen: LogStack,\r\n  },\r\n  Settings: {\r\n    screen: SettingsStack,\r\n  }\r\n})\r\n\r\nexport default createAppContainer(RootDrawerNavigator)","import * as React from 'react';\n// import Home from './screens/home';\nimport Navigator from './routes/drawer';\nimport invariant from 'fbjs/lib/invariant';\nimport areEqual from 'fbjs/lib/areEqual';\nimport Header from './shared/header';\nimport Log from './screens/log';\nimport LogStack from './routes/logStack';\n\n/*Inspired from React Native Tutorial - https://www.youtube.com/channel/UCW5YeuERMmlnqo4oq8vwUpg */\n\nexport default function App() {\n  return (\n    <Navigator />\n  )\n} \n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}